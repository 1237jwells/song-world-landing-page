---
import Navbar from '../components/Navbar.tsx';
import GlobalBackgroundEffects from '../components/GlobalBackgroundEffects.tsx';
import Footer from '../components/Footer.tsx';
import CustomCursor from '../components/CustomCursor.tsx';
import songWorldFavicon from '../assets/song-world/transparent/1x/icon_phone.png';
export interface Props {
	title: string;
	description: string;
}

const { title = 'Song World', description = 'A World Just For You And Your Songs' } = Astro.props;
---

<!doctype html>
<html lang="en" class="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href={songWorldFavicon.src} />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700;800&display=swap" rel="stylesheet">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<style>
			body {
				padding-top: 4rem; /* For fixed navbar */
			}
			html {
				scroll-behavior: smooth;
			}
		</style>
	</head>
	<body class="bg-songworld-light-card text-songworld-light-text dark:bg-songworld-dark-card dark:text-songworld-dark-text transition-colors duration-300 ease-in-out font-nunito">
		<CustomCursor client:only="react" />
		<Navbar client:load />
		<GlobalBackgroundEffects client:load>
		  <slot />
		</GlobalBackgroundEffects>
		<Footer client:visible />
	</body>
</html>

<style is:global>
	html,
	body {
		margin: 0;
		width: 100%;
		min-height: 100%;
		font-family: 'Nunito', sans-serif;
	}
  html {
    cursor: none; /* Hide default system cursor */
    --cursor-color: black; /* Define CSS variable for light mode cursor */
  }

  html.dark {
    cursor: none; /* Hide default system cursor */
    --cursor-color: white; /* Define CSS variable for dark mode cursor */
  }

  /* Keep this for interactive elements to show a pointer,
     or remove if custom cursor will handle all hover states.
     For now, the custom dot will overlay it. */
  a,
  button,
  input[type="submit"],
  input[type="button"],
  [role="button"] {
    cursor: pointer; 
  }
</style>
